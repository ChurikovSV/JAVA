// –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2.1
// üìå –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–ª–∞–Ω–µ—Ç –°–æ–ª–Ω–µ—á–Ω–æ–π
// —Å–∏—Å—Ç–µ–º—ã –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏.
// üìå –í—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø–ª–∞–Ω–µ—Ç—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ
// –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ.
// –ó–∞–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –±–ª–æ–∫–æ–≤
// –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2.2 (–µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ)
// üìå –ü—Ä–æ–π—Ç–∏ –ø–æ —Å–ø–∏—Å–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏ —É–¥–∞–ª–∏—Ç—å
// –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class LS3Task_02 {
    public static List<String> createListPlanet() {
        List<String> list = new ArrayList<String>();
        list.add("–ó–µ–º–ª—è");
        list.add("–í–µ–Ω–µ—Ä–∞");
        list.add("–ú–∞—Ä—Å");
        list.add("–Æ–ø–∏—Ç–µ—Ä");
        list.add("–ú–µ—Ä–∫—É—Ä–∏–π");
        list.add("–í–µ–Ω–µ—Ä–∞");
        list.add("–Æ–ø–∏—Ç–µ—Ä");
        list.add("–°–∞—Ç—É—Ä–Ω");
        list.add("–°–∞—Ç—É—Ä–Ω");
        list.add("–°–∞—Ç—É—Ä–Ω");

        return list;
    }

    public static void countRepeatPlanet(List<String> list) {
        List<String> sortedList = new ArrayList<>(list);
        Collections.sort(sortedList);
        System.out.println(sortedList);
        int count = 1;
        String temp = sortedList.get(0);
        for (int i = 0; i < sortedList.size(); i++) {
            if (sortedList.get(i).equals(temp)) {
                count++;
            } else {
                System.out.println(temp + " " + count);
                count = 1;
                temp = sortedList.get(i);
            }

        }

        System.out.println(temp + " " + count);

    }

    public static void deleteRepat(List<String> list) {
        for (int i = 0; i < list.size(); i++) {
            String temp = list.get(i);
            for (int j = list.size() - 1; j > i; j--) {
                if (list.get(j).equals(temp)) {
                    list.remove(j);

                }
            }

        }
    }

    public static void main(String[] args) {
        List<String> list = createListPlanet();
        System.out.println(list);
        countRepeatPlanet(list);
        deleteRepat(list);
        Collections.sort(list);
        System.out.println(list);
    }

}
